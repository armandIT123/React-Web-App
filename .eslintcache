[{"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\index.js":"1","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\App.js":"2","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Navbar.js":"3","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Create.js":"4","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogDetails.js":"5","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NotFound.js":"6","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogList.js":"7","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\useFetch.js":"8","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\ViewAll.js":"9","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Statistics.js":"10","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Home.js":"11","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NavbarHome.js":"12","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Edit.js":"13","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\SearchBar.js":"14","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\progressBar.js":"15","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\getStats.js":"16","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Chart.js":"17"},{"size":432,"mtime":1628259179381,"results":"18","hashOfConfig":"19"},{"size":1437,"mtime":1628844788456,"results":"20","hashOfConfig":"19"},{"size":872,"mtime":1628838150953,"results":"21","hashOfConfig":"19"},{"size":9487,"mtime":1629465255084,"results":"22","hashOfConfig":"19"},{"size":7412,"mtime":1629450419976,"results":"23","hashOfConfig":"19"},{"size":265,"mtime":1628259172298,"results":"24","hashOfConfig":"19"},{"size":480,"mtime":1628663034009,"results":"25","hashOfConfig":"19"},{"size":1117,"mtime":1628259168032,"results":"26","hashOfConfig":"19"},{"size":404,"mtime":1628672678713,"results":"27","hashOfConfig":"19"},{"size":256,"mtime":1628857016535,"results":"28","hashOfConfig":"19"},{"size":945,"mtime":1628843112635,"results":"29","hashOfConfig":"19"},{"size":232,"mtime":1628844809026,"results":"30","hashOfConfig":"19"},{"size":4139,"mtime":1629464040555,"results":"31","hashOfConfig":"19"},{"size":2012,"mtime":1628836227182,"results":"32","hashOfConfig":"19"},{"size":728,"mtime":1628757260058,"results":"33","hashOfConfig":"19"},{"size":877,"mtime":1628857288505,"results":"34","hashOfConfig":"19"},{"size":1967,"mtime":1629363023522,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1azote1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\index.js",[],["81","82"],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\App.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Navbar.js",["83","84"],"import { Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport useFetch from \"./useFetch\";\nimport \"./index.css\";\n\nconst Navbar = () => {\n  const {\n    error,\n    isPending,\n    data: blogs,\n  } = useFetch(\"http://localhost:8000/blogs\");\n\n  return (\n    <nav className=\"navbar\">\n      <h1>Echipa Formular</h1>\n      <div className=\"navbar-search\">\n        <SearchBar placeholder=\"Search...\" data={blogs} />\n      </div>\n\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/view-all\">View All</Link>\n        <Link\n          to=\"/create\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"#f1356d\",\n            borderRadius: \"8px\",\n          }}\n        >\n          Add Client\n        </Link>\n        <Link to=\"/statistics\">Statistics</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Create.js",["85","86","87","88","89","90","91","92"],"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport \"./index.css\";\nimport { Progress } from \"antd\";\n\nimport { ProgressBar, Button } from \"react-bootstrap\";\n\n// npx json-server --watch data/db.json --port 8000\n\nconst Create = () => {\n  const [lastName, setLastName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [streetName, setStreetName] = useState(\"\");\n  const [streetNo, setStreetNo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [ssn, setSSN] = useState(\"\");\n  const [question, setQuestion] = useState(\"NO\");\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [isShowing, setIsShowing] = useState(false);\n  const [isPending, setIsPending] = useState(false);\n\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    console.log(data);\n\n    const blog = {\n      lastName,\n      firstName,\n      streetName,\n      streetNo,\n      city,\n      state,\n      phoneNo,\n      ssn,\n      question,\n      licensePlate,\n    };\n    setIsPending(true);\n    fetch(\"http://localhost:8000/blogs/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      // history.go(-1);\n      history.push(\"/\");\n      setIsPending(false);\n    });\n\n    const newTot = total + 1;\n    const newCurr = current + 1;\n    fetch(\"http://localhost:8000/stats/\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        total: newTot,\n        current: newCurr,\n      }),\n    });\n    console.log(newTot);\n  };\n\n  const { data: blog } = useFetch(\"http://localhost:8000/blogs/\");\n  const { data: stats, isPending: statsPending } = useFetch(\n    \"http://localhost:8000/stats/\"\n  );\n  const [total, setTotal] = useState(0);\n  const [current, setCurrent] = useState(0);\n  const [deleted, setDeleted] = useState(0);\n\n  useEffect(() => {\n    if (stats) {\n      setTotal(stats.total);\n      setCurrent(stats.current);\n      setDeleted(stats.deleted);\n    }\n  }, [stats]);\n\n  const handleAdd = () => {\n    if (current > 10) {\n      console.log(\"works\");\n      // fetch(\"http://localhost:8000/blogs/\" + 37, {\n      //   method: \"DELETE\",\n      // }).then(() => {\n      //   history.push(\"/\");\n      // });\n    }\n  };\n  const progress = 50;\n  return (\n    <div className=\"create\">\n      <h1>New Client</h1>\n      {\n        <Progress\n          percent={100}\n          strokeColor={{\n            \"0%\": \"#108ee9\",\n            \"100%\": \"#87d068\",\n          }}\n        />\n      }\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <fieldset>\n          <label>Last Name</label>\n          <input\n            id=\"lastName\"\n            type=\"text\"\n            value={lastName}\n            placeholder=\"Enter your last name...\"\n            {...register(\"lastName\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[A-Za-z]+$/i,\n                message: \"This is not a valid name\",\n              },\n              maxLength: { value: 20, message: \"This name is too long\" },\n            })}\n            onChange={(e) => setLastName(e.target.value)}\n            // required\n          />\n          {errors.lastName && <p>{errors.lastName.message}</p>}\n          <label>First Name</label>\n          <input\n            id=\"firstName\"\n            type=\"text\"\n            // required\n            value={firstName}\n            placeholder=\"Enter your first name...\"\n            {...register(\"firstName\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[a-z ,.'-]+$/i,\n                message: \"This is not a valid name\",\n              },\n              maxLength: { value: 25, message: \"This name is too long\" },\n            })}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n          {errors.firstName && <p>{errors.firstName.message}</p>}\n          <label>Street Name</label>\n          <input\n            id=\"street-name\"\n            type=\"text\"\n            value={streetName}\n            placeholder=\"Enter your first name...\"\n            {...register(\"streetName\", {\n              pattern: {\n                value: /^[A-Za-z-'.]+$/i,\n                message: \"This is not a valid street name\",\n              },\n              maxLength: { value: 20, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setStreetName(e.target.value)}\n          />\n          {errors.streetName && <p>{errors.streetName.message}</p>}\n          <label>Street Number</label>\n          <input\n            id=\"street-no\"\n            type=\"text\"\n            value={streetNo}\n            placeholder=\"Enter your street no...\"\n            {...register(\"streetNo\", {\n              pattern: {\n                value: /^[0-9A-Za-z]+$/i,\n                message: \"This is not a valid street number...\",\n              },\n              maxLength: { value: 20, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setStreetNo(e.target.value)}\n          />\n          {errors.streetNo && <p>{errors.streetNo.message}</p>}\n          <label>City</label>\n          <input\n            id=\"city\"\n            type=\"text\"\n            // required\n            value={city}\n            placeholder=\"Enter your city...\"\n            {...register(\"city\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[A-Za-z-']+$/i,\n                message: \"This is not a city name\",\n              },\n              maxLength: { value: 20, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setCity(e.target.value)}\n          />\n          {errors.city && <p>{errors.city.message}</p>}\n          <label>State</label>\n          <input\n            id=\"state\"\n            type=\"text\"\n            // required\n            value={state}\n            placeholder=\"Enter your  state...\"\n            {...register(\"state\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[A-Za-z-']+$/i,\n                message: \"This is not a state name\",\n              },\n              maxLength: { value: 20, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setState(e.target.value)}\n          />\n          {errors.state && <p>{errors.state.message}</p>}\n          <label>Phone Number</label>\n          <input\n            id=\"phone-no\"\n            type=\"text\"\n            // required\n            value={phoneNo}\n            placeholder=\"Enter your phone number...\"\n            {...register(\"phoneNo\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[0-9+-.]+$/i,\n                message: \"This is not a valid phone number!\",\n              },\n              minLength: { value: 8, message: \"Too short\" },\n              maxLength: { value: 15, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setPhoneNo(e.target.value)}\n          />\n          {errors.phoneNo && <p>{errors.phoneNo.message}</p>}\n          <label>Social Security Number</label>\n          <input\n            id=\"ssn\"\n            type=\"text\"\n            // required\n            value={ssn}\n            placeholder=\"Enter your  ssn...\"\n            {...register(\"ssn\", {\n              required: \"This is required\",\n              pattern: {\n                value: /^[0-9]+$/i,\n                message: \"This is not a state name\",\n              },\n              minLength: { value: 11, message: \"Too short\" },\n              maxLength: { value: 20, message: \"Max length exceeded\" },\n            })}\n            onChange={(e) => setSSN(e.target.value)}\n          />\n          {errors.ssn && <p>{errors.ssn.message}</p>}\n          <label>Own a car?</label>\n          <select\n            id=\"question\"\n            value={question}\n            onChange={(e) => {\n              setQuestion(e.target.value);\n            }}\n          >\n            <option value=\"YES\">Yes</option>\n            <option value=\"NO\">No</option>\n          </select>\n\n          {question === \"YES\" && (\n            <div>\n              <label>License Plate</label>\n              <input\n                id=\"license-plate\"\n                type=\"text\"\n                value={licensePlate}\n                placeholder=\"Enter your  license plate number...\"\n                {...register(\"licensePlate\", {\n                  pattern: {\n                    value: /^[0-9a-zA-Z]+$/i,\n                    message: \"This is not a license plate number\",\n                  },\n                  minLength: { value: 5, message: \"Too short\" },\n                  maxLength: { value: 10, message: \"Max length exceeded\" },\n                })}\n                onChange={(e) => setLicensePlate(e.target.value)}\n              />\n              {errors.licensePlate && <p>{errors.licensePlate.message}</p>}\n            </div>\n          )}\n\n          {!isPending && (\n            <button className=\"add-btn\" onClick={handleAdd}>\n              Add Client\n            </button>\n          )}\n          {isPending && <button>Adding Client</button>}\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogDetails.js",["93"],"import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { useState, useEffect } from \"react\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const {\n    data: blog,\n    error,\n    isPending,\n  } = useFetch(\"http://localhost:8000/blogs/\" + id);\n  const { data: stats, isPending: statsPending } = useFetch(\n    \"http://localhost:8000/stats/\"\n  );\n  console.log(stats);\n\n  const history = useHistory();\n  const [lastName, setLastName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [streetName, setStreetName] = useState(\"\");\n  const [streetNo, setStreetNo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [ssn, setSSN] = useState(\"\");\n  const [question, setQuestion] = useState(\"NO\");\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [save, setSave] = useState(false);\n  const [deleted, setDeleted] = useState(0);\n  const [current, setCurrent] = useState(0);\n  const [edited, setEdited] = useState(0);\n\n  useEffect(() => {\n    if (blog) {\n      setLastName(blog.lastName);\n      setFirstName(blog.firstName);\n      setStreetName(blog.streetName);\n      setStreetNo(blog.streetNo);\n      setCity(blog.city);\n      setState(blog.state);\n      setPhoneNo(blog.phoneNo);\n      setSSN(blog.ssn);\n      setLicensePlate(blog.licensePlate);\n    }\n  }, [blog]);\n\n  useEffect(() => {\n    if (stats) {\n      setDeleted(stats.deleted);\n      setCurrent(stats.current);\n      setEdited(stats.edited);\n    }\n  }, [stats]);\n\n  const handleSave = (e) => {\n    setSave(!save);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = {\n      lastName,\n      firstName,\n      streetName,\n      streetNo,\n      city,\n      state,\n      phoneNo,\n      ssn,\n      question,\n      licensePlate,\n    };\n\n    fetch(\"http://localhost:8000/blogs/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      // history.go(-1);\n      history.push(\"/\");\n    });\n  };\n\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\",\n    }).then(() => {\n      history.push(\"/\");\n    });\n    console.log(blog);\n    const newDel = deleted + 1;\n    const newCurr = current - 1;\n    fetch(\"http://localhost:8000/stats/\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        deleted: newDel,\n        current: newCurr,\n      }),\n    });\n  };\n  const handleUpdate = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: blog.id,\n        lastName,\n        firstName,\n        streetName,\n        streetNo,\n        city,\n        state,\n        phoneNo,\n        ssn,\n        question,\n        licensePlate,\n      }),\n    });\n    setSave(false);\n    const newEd = edited + 1;\n    fetch(\"http://localhost:8000/stats/\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        edited: newEd,\n      }),\n    });\n  };\n  if (current > 5) {\n    console.log(\"merge\");\n  }\n\n  return (\n    <div className=\"blog-details\">\n      <fieldset>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {blog && (\n          <article>\n            {!save && (\n              <div className=\"blog-details-good\">\n                <h1>{lastName + \" \" + firstName}</h1>\n                <div>Adress: {streetName + \" \" + streetNo}</div>\n                <div>City/State: {city + \", \" + state}</div>\n                <div>Phone Number: {phoneNo}</div>\n                <div>Social Security Number: {ssn}</div>\n                <div>Car owner: {question}</div>\n                <div>License Plate: {licensePlate}</div>\n              </div>\n            )}\n            {save && (\n              <div>\n                <div className=\"create\">\n                  <h2>New Client</h2>\n                  <form onSubmit={handleSubmit}>\n                    <label>Last Name</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                    <label>First Name</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                    <label>Street Name</label>\n                    <input\n                      type=\"text\"\n                      value={streetName}\n                      onChange={(e) => setStreetName(e.target.value)}\n                    />\n                    <label>Street Number</label>\n                    <input\n                      type=\"text\"\n                      value={streetNo}\n                      onChange={(e) => setStreetNo(e.target.value)}\n                    />\n                    <label>City</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={city}\n                      onChange={(e) => setCity(e.target.value)}\n                    />\n                    <label>State</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={state}\n                      onChange={(e) => setState(e.target.value)}\n                    />\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={phoneNo}\n                      onChange={(e) => setPhoneNo(e.target.value)}\n                    />\n                    <label>Social Security Number</label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={ssn}\n                      onChange={(e) => setSSN(e.target.value)}\n                    />\n                    <label>Own a car?</label>\n                    <select\n                      value={question}\n                      onChange={(e) => {\n                        setQuestion(e.target.value);\n                      }}\n                    >\n                      <option value=\"YES\">Yes</option>\n                      <option value=\"NO\">No</option>\n                    </select>\n\n                    {question === \"YES\" && (\n                      <div>\n                        <label>License Plate</label>\n                        <input\n                          type=\"text\"\n                          value={licensePlate}\n                          onChange={(e) => setLicensePlate(e.target.value)}\n                        />\n                      </div>\n                    )}\n                  </form>\n                </div>\n              </div>\n            )}\n            <button onClick={handleClick}>Delete</button>\n            {!save && <button onClick={handleSave}>Edit</button>}\n            {save && <button onClick={handleUpdate}>Save</button>}\n          </article>\n        )}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NotFound.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\useFetch.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\ViewAll.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Statistics.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Home.js",["94","95","96"],"import { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport useFetch from \"./useFetch\";\r\nimport \"./index.css\";\r\nimport NavbarHome from \"./NavbarHome\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    error,\r\n    isPending,\r\n    data: blogs,\r\n  } = useFetch(\"http://localhost:8000/blogs\");\r\n  return (\r\n    <div>\r\n      {/* <NavbarHome /> */}\r\n      <div className=\"search-input\">\r\n        <SearchBar placeholder=\"Search...\" data={blogs} />\r\n      </div>\r\n      <Link to=\"/view-all\" className=\"home-view-all\">\r\n        View All\r\n      </Link>\r\n      <Link\r\n        to=\"/create\"\r\n        style={{\r\n          color: \"white\",\r\n          backgroundColor: \"#f1356d\",\r\n          borderRadius: \"8px\",\r\n        }}\r\n        className=\"home-add-client\"\r\n      >\r\n        Add Client\r\n      </Link>\r\n      <Link to=\"/statistics\" className=\"home-statistics\">\r\n        Statistics\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NavbarHome.js",["97"],"import { Link } from \"react-router-dom\";\r\n\r\nconst NavbarHome = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"navbar-home\">\r\n        <h1>Echipa Formular</h1>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavbarHome;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Edit.js",["98","99","100"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Create from \"./Create\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Edit = (props) => {\r\n  const [lastName, setLastName] = useState(props.lastName);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [streetName, setStreetName] = useState(\"\");\r\n  const [streetNo, setStreetNo] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [phoneNo, setPhoneNo] = useState(\"\");\r\n  const [ssn, setSSN] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"NO\");\r\n  const [licensePlate, setLicensePlate] = useState(\"\");\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const blog = {\r\n      lastName,\r\n      firstName,\r\n      streetName,\r\n      streetNo,\r\n      city,\r\n      state,\r\n      phoneNo,\r\n      ssn,\r\n      question,\r\n      licensePlate,\r\n    };\r\n\r\n    setIsPending(true);\r\n\r\n    fetch(\"http://localhost:8000/blogs/\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog),\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push(\"/\");\r\n      setIsPending(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Edit Client</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Last Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={lastName}\r\n          {...register(\"lastName\", {\r\n            required: \"This is required\",\r\n            pattern: {\r\n              value: /^[A-Za-z]+$/i,\r\n              message: \"This is not a valid name\",\r\n            },\r\n            maxLength: { value: 20, message: \"This name is too long\" },\r\n          })}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n        <label>First Name</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <label>Street Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={streetName}\r\n          onChange={(e) => setStreetName(e.target.value)}\r\n        />\r\n        <label>Street Number</label>\r\n        <input\r\n          type=\"text\"\r\n          value={streetNo}\r\n          onChange={(e) => setStreetNo(e.target.value)}\r\n        />\r\n        <label>City</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <label>State</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={state}\r\n          onChange={(e) => setState(e.target.value)}\r\n        />\r\n        <label>Phone Number</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={phoneNo}\r\n          onChange={(e) => setPhoneNo(e.target.value)}\r\n        />\r\n        <label>Social Security Number</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={ssn}\r\n          onChange={(e) => setSSN(e.target.value)}\r\n        />\r\n        <label>Own a car?</label>\r\n        <select\r\n          value={question}\r\n          onChange={(e) => {\r\n            setQuestion(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"YES\">Yes</option>\r\n          <option value=\"NO\">No</option>\r\n        </select>\r\n\r\n        {question === \"YES\" && (\r\n          <div>\r\n            <label>License Plate</label>\r\n            <input\r\n              type=\"text\"\r\n              value={licensePlate}\r\n              onChange={(e) => setLicensePlate(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {!isPending && <button className=\"btn-save\">Save</button>}\r\n        {isPending && <button>Saving</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\SearchBar.js",["101"],"import React, { useState } from \"react\";\r\nimport BlogList from \"./BlogList\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction SearchBar({ placeholder, data }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    const newFilter =\r\n      searchWord.length !== 0 &&\r\n      data &&\r\n      data.filter((value) => {\r\n        return (\r\n          value.lastName.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.firstName.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.streetName.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.streetNo.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.city.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.state.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.phoneNo.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.ssn.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n          value.licensePlate.toLowerCase().includes(searchWord.toLowerCase())\r\n        );\r\n      });\r\n    setFilteredData(newFilter);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div classname=\"searchInputs\">\r\n        <input type=\"text\" placeholder={placeholder} onChange={handleFilter} />\r\n        <div className=\"searchIcon\">\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <SearchIcon id=\"searchBtn\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {filteredData.length !== 0 && (\r\n        <div className=\"dataResult\">\r\n          {filteredData &&\r\n            filteredData.map((blog, key) => {\r\n              return (\r\n                <div class>\r\n                  <BlogList blogs={filteredData} />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBar;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\progressBar.js",["102","103"],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\getStats.js",["104","105","106","107","108","109","110","111"],"import { useEffect, useState } from \"react\";\r\nimport useFetch from \"./useFetch\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst GetStats = () => {\r\n  const [stats, setStats] = useState([]);\r\n  const [deleted, setDeleted] = useState([]);\r\n  const [current, setCurrent] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n  const [edited, setEdited] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (stats) {\r\n      setEdited(stats.edited);\r\n      setTotal(stats.total);\r\n      setCurrent(stats.current);\r\n      setDeleted(stats.deleted);\r\n    }\r\n  }, [stats]);\r\n\r\n  fetch(\"http://localhost:8000/stats/\", {\r\n    method: \"COPY\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(stats),\r\n  }).then(() => {\r\n    // history.go(-1);\r\n    // history.push(\"/stats\");\r\n  });\r\n\r\n  return [stats];\r\n};\r\n\r\nexport default GetStats;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Chart.js",["112","113","114","115","116","117"],"import { useEffect, useState } from \"react\";\r\nimport useFetch from \"./useFetch\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst Chart = () => {\r\n  // const { data: stats, isPending: statsPending } = useFetch(\r\n  //   \"http://localhost:8000/stats/\"\r\n  // );\r\n\r\n  const { data: stats, isPending: statsPending } = useFetch(\r\n    \"http://localhost:8000/stats/\"\r\n  );\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [current, setCurrent] = useState(0);\r\n  const [edited, setEdited] = useState(0);\r\n  const [deleted, setDeleted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (stats) {\r\n      setTotal(stats.total);\r\n      setCurrent(stats.current);\r\n      setEdited(stats.edited);\r\n      setDeleted(stats.deleted);\r\n    }\r\n  }, [stats]);\r\n\r\n  const added = parseInt(total);\r\n  const currentt = parseInt(current);\r\n  const editedd = parseInt(edited);\r\n  const deletedd = parseInt(deleted);\r\n\r\n  const data = [\r\n    {\r\n      name: \"Total Clients\",\r\n      current_number: added,\r\n    },\r\n    {\r\n      name: \"Current # of Clients\",\r\n      current_number: current,\r\n    },\r\n    {\r\n      name: \"Deleted Clients\",\r\n      current_number: deleted,\r\n    },\r\n    {\r\n      name: \"Modified Clients\",\r\n      current_number: edited,\r\n    },\r\n  ];\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" aspect={3}>\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"current_number\" fill=\"#34cdeb\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n",["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":8,"column":5,"nodeType":"126","messageId":"127","endLine":8,"endColumn":10},{"ruleId":"124","severity":1,"message":"128","line":9,"column":5,"nodeType":"126","messageId":"127","endLine":9,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":21},{"ruleId":"124","severity":1,"message":"130","line":8,"column":23,"nodeType":"126","messageId":"127","endLine":8,"endColumn":29},{"ruleId":"124","severity":1,"message":"131","line":23,"column":10,"nodeType":"126","messageId":"127","endLine":23,"endColumn":19},{"ruleId":"124","severity":1,"message":"132","line":23,"column":21,"nodeType":"126","messageId":"127","endLine":23,"endColumn":33},{"ruleId":"124","severity":1,"message":"133","line":72,"column":17,"nodeType":"126","messageId":"127","endLine":72,"endColumn":21},{"ruleId":"124","severity":1,"message":"134","line":73,"column":35,"nodeType":"126","messageId":"127","endLine":73,"endColumn":47},{"ruleId":"124","severity":1,"message":"135","line":78,"column":10,"nodeType":"126","messageId":"127","endLine":78,"endColumn":17},{"ruleId":"124","severity":1,"message":"136","line":98,"column":9,"nodeType":"126","messageId":"127","endLine":98,"endColumn":17},{"ruleId":"124","severity":1,"message":"134","line":12,"column":35,"nodeType":"126","messageId":"127","endLine":12,"endColumn":47},{"ruleId":"124","severity":1,"message":"137","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":9,"column":5,"nodeType":"126","messageId":"127","endLine":9,"endColumn":10},{"ruleId":"124","severity":1,"message":"128","line":10,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":14},{"ruleId":"124","severity":1,"message":"138","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":14},{"ruleId":"124","severity":1,"message":"139","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"131","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":19},{"ruleId":"124","severity":1,"message":"132","line":17,"column":21,"nodeType":"126","messageId":"127","endLine":17,"endColumn":33},{"ruleId":"124","severity":1,"message":"140","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"141","line":4,"column":11,"nodeType":"126","messageId":"127","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"142","line":4,"column":20,"nodeType":"126","messageId":"127","endLine":4,"endColumn":29},{"ruleId":"124","severity":1,"message":"143","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"144","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"145","line":3,"column":22,"nodeType":"126","messageId":"127","endLine":3,"endColumn":31},{"ruleId":"124","severity":1,"message":"146","line":6,"column":17,"nodeType":"126","messageId":"127","endLine":6,"endColumn":25},{"ruleId":"124","severity":1,"message":"135","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"147","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":17},{"ruleId":"124","severity":1,"message":"148","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":15},{"ruleId":"124","severity":1,"message":"149","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":16},{"ruleId":"124","severity":1,"message":"144","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"145","line":3,"column":22,"nodeType":"126","messageId":"127","endLine":3,"endColumn":31},{"ruleId":"124","severity":1,"message":"134","line":21,"column":35,"nodeType":"126","messageId":"127","endLine":21,"endColumn":47},{"ruleId":"124","severity":1,"message":"150","line":40,"column":9,"nodeType":"126","messageId":"127","endLine":40,"endColumn":17},{"ruleId":"124","severity":1,"message":"151","line":41,"column":9,"nodeType":"126","messageId":"127","endLine":41,"endColumn":16},{"ruleId":"124","severity":1,"message":"152","line":42,"column":9,"nodeType":"126","messageId":"127","endLine":42,"endColumn":17},{"ruleId":"120","replacedBy":"153"},{"ruleId":"122","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'isPending' is assigned a value but never used.","'ProgressBar' is defined but never used.","'Button' is defined but never used.","'isShowing' is assigned a value but never used.","'setIsShowing' is assigned a value but never used.","'blog' is assigned a value but never used.","'statsPending' is assigned a value but never used.","'deleted' is assigned a value but never used.","'progress' is assigned a value but never used.","'NavbarHome' is defined but never used.","'Link' is defined but never used.","'Create' is defined but never used.","'CloseIcon' is defined but never used.","'bgcolor' is assigned a value but never used.","'completed' is assigned a value but never used.","'useFetch' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'setStats' is assigned a value but never used.","'current' is assigned a value but never used.","'total' is assigned a value but never used.","'edited' is assigned a value but never used.","'currentt' is assigned a value but never used.","'editedd' is assigned a value but never used.","'deletedd' is assigned a value but never used.",["155"],["156"],"no-global-assign","no-unsafe-negation"]