[{"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\index.js":"1","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\App.js":"2","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Navbar.js":"3","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Create.js":"4","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogDetails.js":"5","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NotFound.js":"6","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogList.js":"7","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\useFetch.js":"8","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\ViewAll.js":"9","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Statistics.js":"10","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Home.js":"11","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NavbarHome.js":"12","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Edit.js":"13","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\SearchBar.js":"14"},{"size":432,"mtime":1628259179381,"results":"15","hashOfConfig":"16"},{"size":1148,"mtime":1628502385037,"results":"17","hashOfConfig":"16"},{"size":567,"mtime":1628502307747,"results":"18","hashOfConfig":"16"},{"size":3606,"mtime":1628515450378,"results":"19","hashOfConfig":"16"},{"size":6188,"mtime":1628259165351,"results":"20","hashOfConfig":"16"},{"size":265,"mtime":1628259172298,"results":"21","hashOfConfig":"16"},{"size":480,"mtime":1628259163515,"results":"22","hashOfConfig":"16"},{"size":1117,"mtime":1628259168032,"results":"23","hashOfConfig":"16"},{"size":396,"mtime":1628154799852,"results":"24","hashOfConfig":"16"},{"size":93,"mtime":1628259170426,"results":"25","hashOfConfig":"16"},{"size":700,"mtime":1628604844813,"results":"26","hashOfConfig":"16"},{"size":179,"mtime":1628259174244,"results":"27","hashOfConfig":"16"},{"size":3676,"mtime":1628246575572,"results":"28","hashOfConfig":"16"},{"size":1507,"mtime":1628615682396,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1azote1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\index.js",[],["66","67"],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\App.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Navbar.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Create.js",["68","69","70","71","72"],"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Create = () => {\n  const [lastName, setLastName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [streetName, setStreetName] = useState(\"\");\n  const [streetNo, setStreetNo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [ssn, setSSN] = useState(\"\");\n  const [question, setQuestion] = useState(\"NO\");\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [isShowing, setIsShowing] = useState(false);\n  const [isPending, setIsPending] = useState(false);\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = {\n      lastName,\n      firstName,\n      streetName,\n      streetNo,\n      city,\n      state,\n      phoneNo,\n      ssn,\n      question,\n      licensePlate,\n    };\n\n    setIsPending(true);\n\n    fetch(\"http://localhost:8000/blogs/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      // history.go(-1);\n      history.push(\"/\");\n      setIsPending(false);\n    });\n  };\n\n  return (\n    <div className=\"create\">\n      <h2>New Client</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Last Name</label>\n        <input\n          type=\"text\"\n          required\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n        />\n        <label>First Name</label>\n        <input\n          type=\"text\"\n          required\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n        <label>Street Name</label>\n        <input\n          type=\"text\"\n          value={streetName}\n          onChange={(e) => setStreetName(e.target.value)}\n        />\n        <label>Street Number</label>\n        <input\n          type=\"text\"\n          value={streetNo}\n          onChange={(e) => setStreetNo(e.target.value)}\n        />\n        <label>City</label>\n        <input\n          type=\"text\"\n          required\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        <label>State</label>\n        <input\n          type=\"text\"\n          required\n          value={state}\n          onChange={(e) => setState(e.target.value)}\n        />\n        <label>Phone Number</label>\n        <input\n          type=\"text\"\n          required\n          value={phoneNo}\n          onChange={(e) => setPhoneNo(e.target.value)}\n        />\n        <label>Social Security Number</label>\n        <input\n          type=\"text\"\n          required\n          value={ssn}\n          onChange={(e) => setSSN(e.target.value)}\n        />\n        <label>Own a car?</label>\n        <select\n          value={question}\n          onChange={(e) => {\n            setQuestion(e.target.value);\n          }}\n        >\n          <option value=\"YES\">Yes</option>\n          <option value=\"NO\">No</option>\n        </select>\n\n        {question === \"YES\" && (\n          <div>\n            <label>License Plate</label>\n            <input\n              type=\"text\"\n              value={licensePlate}\n              onChange={(e) => setLicensePlate(e.target.value)}\n            />\n          </div>\n        )}\n\n        {!isPending && <button>Add Client</button>}\n        {isPending && <button>Adding Client</button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogDetails.js",["73","74"],"import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { useState, useEffect } from \"react\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const {\n    data: blog,\n    error,\n    isPending,\n  } = useFetch(\"http://localhost:8000/blogs/\" + id);\n  const history = useHistory();\n  const [lastName, setLastName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [streetName, setStreetName] = useState(\"\");\n  const [streetNo, setStreetNo] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [ssn, setSSN] = useState(\"\");\n  const [question, setQuestion] = useState(\"NO\");\n  const [licensePlate, setLicensePlate] = useState(\"\");\n  const [isShowing, setIsShowing] = useState(false);\n  const [save, setSave] = useState(false);\n  useEffect(() => {\n    if (blog) {\n      setLastName(blog.lastName);\n      setFirstName(blog.firstName);\n      setStreetName(blog.streetName);\n      setStreetNo(blog.streetNo);\n      setCity(blog.city);\n      setState(blog.state);\n      setPhoneNo(blog.phoneNo);\n      setSSN(blog.ssn);\n      setLicensePlate(blog.licensePlate);\n    }\n  }, [blog]);\n  const handleSave = (e) => {\n    setSave(!save);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = {\n      lastName,\n      firstName,\n      streetName,\n      streetNo,\n      city,\n      state,\n      phoneNo,\n      ssn,\n      question,\n      licensePlate,\n    };\n\n    fetch(\"http://localhost:8000/blogs/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog),\n    }).then(() => {\n      // history.go(-1);\n      history.push(\"/\");\n    });\n  };\n\n  const handleClick = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"DELETE\",\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  const handleUpdate = () => {\n    fetch(\"http://localhost:8000/blogs/\" + blog.id, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: blog.id,\n        lastName,\n        firstName,\n        streetName,\n        streetNo,\n        city,\n        state,\n        phoneNo,\n        ssn,\n        question,\n        licensePlate,\n      }),\n    });\n    setSave(false);\n  };\n\n  return (\n    <div className=\"blog-details\">\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {blog && (\n        <article>\n          {!save && (\n            <div>\n              <h1>{lastName + \" \" + firstName}</h1>\n              <div>Adress: {streetName + \" \" + streetNo}</div>\n              <div>City/State: {city + \", \" + state}</div>\n              <div>Phone Number: {phoneNo}</div>\n              <div>Social Security Number: {ssn}</div>\n              <div>Car owner: {question}</div>\n              <div>License Plate: {licensePlate}</div>\n            </div>\n          )}\n          {save && (\n            <div>\n              <div className=\"create\">\n                <h2>New Client</h2>\n                <form onSubmit={handleSubmit}>\n                  <label>Last Name</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                  <label>First Name</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                  <label>Street Name</label>\n                  <input\n                    type=\"text\"\n                    value={streetName}\n                    onChange={(e) => setStreetName(e.target.value)}\n                  />\n                  <label>Street Number</label>\n                  <input\n                    type=\"text\"\n                    value={streetNo}\n                    onChange={(e) => setStreetNo(e.target.value)}\n                  />\n                  <label>City</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                  />\n                  <label>State</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                  />\n                  <label>Phone Number</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={phoneNo}\n                    onChange={(e) => setPhoneNo(e.target.value)}\n                  />\n                  <label>Social Security Number</label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={ssn}\n                    onChange={(e) => setSSN(e.target.value)}\n                  />\n                  <label>Own a car?</label>\n                  <select\n                    value={question}\n                    onChange={(e) => {\n                      setQuestion(e.target.value);\n                    }}\n                  >\n                    <option value=\"YES\">Yes</option>\n                    <option value=\"NO\">No</option>\n                  </select>\n\n                  {question === \"YES\" && (\n                    <div>\n                      <label>License Plate</label>\n                      <input\n                        type=\"text\"\n                        value={licensePlate}\n                        onChange={(e) => setLicensePlate(e.target.value)}\n                      />\n                    </div>\n                  )}\n                </form>\n              </div>\n            </div>\n          )}\n          <button onClick={handleClick}>Delete</button>\n          <button onClick={handleSave}>Edit</button>\n          {save && <button onClick={handleUpdate}>Save</button>}\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NotFound.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\useFetch.js",[],["75","76"],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\ViewAll.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Statistics.js",[],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Home.js",["77","78"],"import { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    error,\r\n    isPending,\r\n    data: blogs,\r\n  } = useFetch(\"http://localhost:8000/blogs\");\r\n  return (\r\n    <div>\r\n      <Link to=\"/view-all\">View All</Link>\r\n      <Link\r\n        to=\"/create\"\r\n        style={{\r\n          color: \"white\",\r\n          backgroundColor: \"#f1356d\",\r\n          borderRadius: \"8px\",\r\n        }}\r\n      >\r\n        Add Client\r\n      </Link>\r\n      <Link to=\"/statistics\">Statistics</Link>\r\n      <div>\r\n        <SearchBar placeholder=\"Search...\" data={blogs} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\NavbarHome.js",["79"],"import { Link } from \"react-router-dom\";\r\n\r\nconst NavbarHome = () => {\r\n  return (\r\n    <nav>\r\n      <h1>Echipa Formular</h1>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavbarHome;\r\n",["80","81"],"C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\Edit.js",["82","83","84"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Create from './Create';\r\n\r\nconst Edit = (props) => {\r\n\r\n  \r\n    \r\n  const [lastName, setLastName] = useState(props.lastName);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [streetName, setStreetName] = useState('');\r\n  const [streetNo, setStreetNo] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [phoneNo, setPhoneNo] = useState('');\r\n  const [ssn, setSSN] = useState('');\r\n  const [question, setQuestion] = useState('NO');\r\n  const [licensePlate, setLicensePlate] = useState(\"\");\r\n  const [isShowing, setIsShowing] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n \r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = {\r\n      lastName,\r\n      firstName,\r\n      streetName,\r\n      streetNo,\r\n      city,\r\n      state,\r\n      phoneNo,\r\n      ssn,\r\n      question,\r\n      licensePlate\r\n    };\r\n\r\n    setIsPending(true);   \r\n   \r\n\r\n    fetch('http://localhost:8000/blogs/', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push('/');\r\n      setIsPending(false);\r\n      \r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Edit Client</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Last Name</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <label>First Name</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <label>Street Name</label>\r\n        <input \r\n          type=\"text\"        \r\n          value={streetName}\r\n          onChange={(e) => setStreetName(e.target.value)}\r\n        />\r\n        <label>Street Number</label>\r\n        <input \r\n          type=\"text\"        \r\n          value={streetNo}\r\n          onChange={(e) => setStreetNo(e.target.value)}\r\n        />\r\n        <label>City</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <label>State</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={state}\r\n          onChange={(e) => setState(e.target.value)}\r\n        />\r\n         <label>Phone Number</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={phoneNo}\r\n          onChange={(e) => setPhoneNo(e.target.value)}\r\n        />\r\n        <label>Social Security Number</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={ssn}\r\n          onChange={(e) => setSSN(e.target.value)}\r\n        />\r\n        <label>Own a car?</label>\r\n        <select\r\n          value={question}\r\n          onChange={e=>{\r\n            setQuestion(e.target.value)\r\n          }}\r\n        >\r\n          <option value=\"YES\">Yes</option>\r\n          <option value=\"NO\">No</option>\r\n        </select>\r\n\r\n        {question === \"YES\" && <div>\r\n          <label>License Plate</label>\r\n        <input \r\n          type=\"text\" \r\n          value={licensePlate}\r\n          onChange={(e) => setLicensePlate(e.target.value)}\r\n        />\r\n        </div>}\r\n\r\n        {!isPending && <button>Save</button>}\r\n        {isPending && <button>Saving</button>}\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Edit;","C:\\Users\\ARBALAN\\Desktop\\echipaFormular\\32\\dojo-blog\\src\\SearchBar.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":17},{"ruleId":"89","severity":1,"message":"93","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":21},{"ruleId":"89","severity":1,"message":"94","line":5,"column":13,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"89","severity":1,"message":"95","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":18,"column":21,"nodeType":"91","messageId":"92","endLine":18,"endColumn":33},{"ruleId":"89","severity":1,"message":"95","line":23,"column":10,"nodeType":"91","messageId":"92","endLine":23,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":23,"column":21,"nodeType":"91","messageId":"92","endLine":23,"endColumn":33},{"ruleId":"85","replacedBy":"97"},{"ruleId":"87","replacedBy":"98"},{"ruleId":"89","severity":1,"message":"99","line":7,"column":5,"nodeType":"91","messageId":"92","endLine":7,"endColumn":10},{"ruleId":"89","severity":1,"message":"100","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":14},{"ruleId":"89","severity":1,"message":"101","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},{"ruleId":"85","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},{"ruleId":"89","severity":1,"message":"104","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"95","line":19,"column":10,"nodeType":"91","messageId":"92","endLine":19,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":19,"column":21,"nodeType":"91","messageId":"92","endLine":19,"endColumn":33},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'yupResolver' is defined but never used.","'yup' is defined but never used.","'isShowing' is assigned a value but never used.","'setIsShowing' is assigned a value but never used.",["105"],["106"],"'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'Link' is defined but never used.",["105"],["106"],"'Create' is defined but never used.","no-global-assign","no-unsafe-negation"]